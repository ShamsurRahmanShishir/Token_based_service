;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;interrupt [2] void ext_int0_isr(void)
; 0000 000D {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000E 
; 0000 000F char i=45,a=57,i1,i2,a1,a2,press=0;
; 0000 0010 char digit_cathod[10]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};
; 0000 0011 char digit0,digit1,digit2,digit3;
; 0000 0012 
; 0000 0013 
; 0000 0014 void seperate_digits(void)
; 0000 0015 {
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;	i -> R17
;	a -> R16
;	i1 -> R19
;	i2 -> R18
;	a1 -> R21
;	a2 -> R20
;	press -> Y+20
;	digit_cathod -> Y+10
;	digit0 -> Y+9
;	digit1 -> Y+8
;	digit2 -> Y+7
;	digit3 -> Y+6
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0016 
; 0000 0017 i1=i%10;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0018 i2=i/10;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0019 a1=a%10;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 001A a2=a/10;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 001B 
; 0000 001C }
; 0000 001D 
; 0000 001E void display_digits(void)
; 0000 001F {
; 0000 0020 PORTD=0b01111111;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0021 PORTC=digit_cathod[i1];
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0022 delay_ms(10);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0023 PORTD=0b10111111;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0024 PORTC=digit_cathod[i2];
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0025 delay_ms(10);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0026 PORTD=0b11011111;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0027 PORTC=digit_cathod[a1];
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0028 delay_ms(10);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0029 PORTD=0b11101111;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 002A PORTC=digit_cathod[a2];
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 002B delay_ms(10);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 002C }
; 0000 002D 
; 0000 002E PORTC=0;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 002F PORTD=0xF0;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0030 }
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;interrupt [3] void ext_int1_isr(void)
; 0000 0034 {
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0035 char i=30,a=81,i1,i2,a1,a2,press=0;
; 0000 0036 
; 0000 0037 #asm("sei)
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;	i -> R17
;	a -> R16
;	i1 -> R19
;	i2 -> R18
;	a1 -> R21
;	a2 -> R20
;	press -> Y+6
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
	sei)

;PCODE: $0000006E VOL: 0
; 0000 003A {
; 0000 003B 
; 0000 003C i1=i%10;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 003D i2=i/10;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 003E a1=a%10;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 003F a2=a/10;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0040 
; 0000 0041 }
; 0000 0042 
; 0000 0043 void display_digits(void)
; 0000 0044 {
; 0000 0045 PORTB=0b01111111;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0046 PORTA=digit_cathod[i1];
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0047 delay_ms(10);
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0048 PORTB=0b10111111;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0049 PORTA=digit_cathod[i2];
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 004A delay_ms(10);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 004B PORTB=0b11011111;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 004C PORTA=digit_cathod[a1];
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 004D delay_ms(10);
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 004E PORTB=0b11101111;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 004F PORTA=digit_cathod[a2];
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0050 delay_ms(10);
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0051 }
; 0000 0052 
; 0000 0053 PORTA=0;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0054 PORTB=0xF0;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0055 }
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;void main(void)
; 0000 0057 {
;PCODE: $000000AC VOL: 0
; 0000 0058 
; 0000 0059 DDRA=0xFF;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 005A DDRC=0xFF;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 005B DDRD=0xF0;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 005C DDRB=0xF0;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 005D PORTA=0xFF;
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 005E PORTC=0xFF;
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 005F PORTB=0xF0;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 0060 PORTD=0xFO;
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 0061 GICR|=(1<<INT1) | (1<<INT0) | (0<<INT2);
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 0062 MCUCR=(1<<ISC11) | (0<<ISC10) | (1<<ISC01) | (0<<ISC00);
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 0063 MCUCSR=(0<<ISC2);
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0064 GIFR=(1<<INTF1) | (1<<INTF0) | (0<<INTF2);
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0065 #asm("sei")
;PCODE: $000000C6 VOL: 0
; 0000 0066 while (1)
;PCODE: $000000C7 VOL: 0
; 0000 0067 {
; 0000 0068 // Place your code here
; 0000 0069 }
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 006A }
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
